if !post
	- post = data.post
if !comment
	- comment = data.comment

if wantSummary
	include rendered-comment-summary
	
.a-comment(id= 'comment-' + comment.uuid)
	.comment(class= comment.deleted ? 'deleted': '')
		- var thumb = comment.resolvedProfiles[comment.source].profile.photo.url
		- var name = comment.resolvedProfiles[comment.source].profile.name
		.thumb-container
			a(href= proxyEndPoint(comment.source,user))
				img.profile-thumb(src= thumb)
		.comment-container
			
			.post-actions.pull-right
				- var isMine = (comment.source === config.publicHost + '/' + user.username) ? 'true' : ''
				- var postIsMine = (comment.about.replace(/\/post.*/,'') === config.publicHost + '/' + user.username) ? 'true' : ''
				.dropdown(data-jsclass="commentActionsController" data-comment-id= comment.uuid data-is-mine= (isMine || postIsMine))
					button.btn-xs(data-toggle="dropdown")
						i.fa.fa-ellipsis-h
					ul.dropdown-menu
						if (isMine || postIsMine)
							li 
								a.edit-comment(href="#") Edit Comment
							li 
								a.delete-comment(href="#") Delete Comment
						li
							a.hide-comment(href="#") Hide Comment
			
			strong.pull-left
				a(href= proxyEndPoint(comment.source,user))
					span.profile-link
						= name

			!= marked(comment.details.body)
			
			if comment.details.photo
				.comment-photo.loading(data-jsclass="loadController" data-target=".comment-photo" data-endpoint= proxyEndPoint(comment.details.photo,user))
			
			span.timestamp.secondary(data-timestamp= moment(comment.createdOn).toISOString())
				!= ' - ' + moment(comment.createdOn).calendar()

			if comment.versions && comment.versions.length
				span.secondary  (edited)

			- var reactions = comment.resolvedReactions
			- var reactionSummary = comment.reactionSummary
			- var about = comment.about + '/comment/' + comment.uuid
			include rendered-reactions
							
	.clearfix
	.comment-separator
