#scope-post-list
	if posts && posts.length
		for post in posts
			- var postEndpoint = post.source + '/post/' + post.uuid;
			- var poster = post.resolvedProfiles[post.source].profile
			- var about = post.about ? post.resolvedProfiles[post.about].profile : {}
			- var isPublic = post.visibility.indexOf('public') !== -1
			- var commentCount = post.commentCount
			- var isMine = '';
			if user
				- isMine = post.source === config.publicHost + '/' + user.username ? 'true' : '';
				- isOnMyWall = post.about === config.publicHost + '/' + user.username ? 'true' : '';
			.newsfeed-item
				if post.commentSummary || post.reactionSummary
					.news-summary
						!= post.commentSummary
				
				if post.athoritativeEndpoint
					.post.loading.live-element(data-jsclass="loadController" data-target=".post" data-endpoint= '/proxy-post?endpoint=' + encodeURIComponent(post.athoritativeEndpoint,user) data-watch= post.source + '/post/' + post.uuid data-watch-type="post" data-source= post.source data-hat-tip= poster.name)
				else 
					.post.live-element(data-watch= post.source + '/post/' + post.uuid data-watch-type="post" data-source= post.source data-hat-tip= poster.name data-endpoint= '/proxy-post?endpoint=' + encodeURIComponent(post.source + '/post/' + post.uuid,user))
						.post-identity
							.post-avatar
								.media
									- var endpoint = poster.endpoint
									- var thumb = poster.photo ? poster.photo.url : ''
									- var name = poster.name
									- var posterUrl = proxyEndPoint(endpoint,user)
									if !user
										- posterUrl = endpoint

									.media-left
										a(href= posterUrl)
											img.media-object(src= thumb)
									.media-body
										if !forShare
											.post-actions.pull-right
												.dropdown(data-jsclass="postActionsController" data-post-id= post.uuid data-is-mine= isMine data-is-on-my-wall= isOnMyWall)
													button.btn-xs(data-toggle="dropdown")
														i.fa.fa-ellipsis-h
													ul.dropdown-menu
														if isOnMyWall
															li
																a.delete-post(href="#") Remove from Wall
														else if !isMine
															li
																a.share-post(href="#") Share Post
															li
																a.hide-post(href="#") Hide Post
														else
															li 
																a.edit-post(href="#") Edit Post
															li 
																a.delete-post(href="#") Delete Post
										h4.media-heading
											a(href= posterUrl)= name
											if post.about
												span.glyphicon.glyphicon-arrow-right.target-arrow
												a(href= proxyEndPoint(post.about,user))= about.name
										div.secondary
											
											span.post-timestamp.timestamp(data-timestamp= moment(post.createdOn).toISOString())
												= moment(post.createdOn).calendar()
												
											if post.versions
												span.post-edited
													| (edited)
											div
												.visibility
													if post.visibility.indexOf('public') !== -1
														i.glyphicon.glyphicon-globe
													else
														i.glyphicon.glyphicon-eye-open
													= ' ' + post.visibility.join(', ')
												if isPublic && !isPermalink
													.permalink
														a(href= postEndpoint)
															i.glyphicon.glyphicon-link
												if !post.posted
													= ' (pending '
													span.timestamp(data-timestamp= moment(post.autopost).toISOString() data-format="absolute")
													= ')'
												
											if post.geoDescription
												.post-geo
													<i class="glyphicon glyphicon-map-marker"></i>
													= ' ' + post.geoDescription 
													

						- var body = post.body ? post.body : '';
						- var maxHeight = !isPermalink ? '1200' : 50000
						.post-body.markdown.want-constrained(data-max-height= maxHeight)!= marked(body).replace(/\<table\>/g,'<table class="table table-condensed">')

						if post.shareEndpoint
							.shared-post
								.post.loading.live-element(data-jsclass="loadController" data-target=".post" data-endpoint= post.shareEndpoint + '&share=1')

						- var photos = post.sortedPhotos
						include rendered-post-photos
						
						if !noComments && user && !forShare
							.reactions-and-comments
								- var about= poster.endpoint + '/post/' + post.uuid

								- var counts = post.counts
								- var reactions = post.resolvedReactions
								- var reactionSummary = post.reactionSummary
								include rendered-reactions

								- var comments = post.resolvedComments
								- var commentSummary = post.commentSummary
								- var commentCount = post.commentCount
								include rendered-comments

	if data.ogMap
		for og in data.ogMap
			.og-json
				script(id= 'json-og-' + og.hash type="application/json")
					!= JSON.stringify(og)
