# install packages
FROM ubuntu
RUN apt-get update

# install some packages
RUN apt-get install -y build-essential
RUN apt-get install -y supervisor
RUN apt-get install -y git
RUN apt-get install -y imagemagick
RUN apt-get install -y libicu-dev libfontconfig1-dev libjpeg-dev libfreetype6

# install node
RUN apt-get install sudo
RUN apt-get install -y curl
RUN curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
RUN apt-get install -y nodejs

RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update; apt-get install yarn

RUN mkdir -p /var/app/current/working
RUN mkdir -p /var/app/current/client/uploads
ADD deploy/docker-assets/webapp /var/app/current/deploy/docker-assets/webapp

# set up supervisord
RUN cd /var/app/current; cp deploy/docker-assets/webapp/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# To run npm install or not to run npm install, that is the question.
#
# in this case it is not needed so just copy the entire node_modules
# directory to the container so it exactly matches the development
# environment
#
ADD package.json /var/app/current/package.json
ADD yarn.lock /var/app/current/
ADD node_modules /var/app/current/node_modules
RUN cd /var/app/current; yarn add phantomjs-prebuilt

# copy app from local repository into container
ADD assets /var/app/current/assets
ADD tests /var/app/current/tests
ADD locales /var/app/current/locales
ADD gruntfile.js /var/app/current/gruntfile.js
ADD client /var/app/current/client
ADD common /var/app/current/common
ADD server /var/app/current/server

# expose webapp port
EXPOSE 3000

WORKDIR "/var/app/current"

CMD ["/usr/bin/supervisord"]
